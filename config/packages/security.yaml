security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt

    role_hierarchy:    
        ROLE_ADMIN: ROLE_SUPER_ADMIN

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
            #access_control:
                # matches /admin/users/*
            # - { path: '^/admin/users', roles: ROLE_SUPER_ADMIN }

                # require ROLE_ADMIN for /admin*
                #- { path: ^/admin, roles: ROLE_ADMIN }

            # - { path: ^/profile, roles: ROLE_USER }
            

